# 변수
- 선언
  var="contents"
  var=kim
  var=" " #contents내에 따옴표가 있을때
  - 공백이 없어야 한다.
  - 데이터 타입이 없음. 모두 문자열로 인식된다.
- 사용
 echo $var
 - 셸이 값을 치환한다. (프로그램 구동 시)
 echo kim
- [a-zA-Z_0-9]*

## 할당
- 프로그램 이름도 변수로 받을 수 있다.
  command=wc
  op=-c
  $commmand $op animals.txt

- 다른 변수도 세 변수로 할당할 수 있다.
  var=name
  var2=$var
  echo $var2 (이거 그대로 해보셈)
  * var2=$var을 실행한 뒤에도 var=name도 그대로 저장되어 있음 *

- 선언하지 않은 변수 : null값이 설정됨 (오류가 나지 않음)  
  echo $var3
  * 선언하지 않은 변수를 출력하면 blank(null값)가 출력됨
  ----------------
  wc -c $var3 ./data/animals.txt
  --> var3에 저장된 파일/딕셔러니와 animals.txt의 wc -c를 각각 실행시킨 뒤 두개의 결과를 합한 것을 return함

  ****변수에 다른 변수를 넣을 때 항상 '$'표시가 있어야 함****
  ****변수를 사용할 때에는 항상 '$'사용하기****

## null 
  var=
  var=""
  var=''

  var=' ' #공백이 1개

# 변수 활용하기
- file=grades (-> grades1)
- file=grades1
- '${변수}' 구조
- ${file}1  (소괄호는 안됨, 연산할 때만 소괄호 사용함)

Q1. grades -> grades1 파일 이름 변경
  file=grades
  mv $file ${file}1
  ---------------------
  mv $file $file1  #여기서 $file1은 ${file}1과 다른 값을 가짐
  ****file1은 공통된 것을 묶은 것이 아닌 변수 그냥 그 자체임****

## substring cncnfgkrl
- animals.txt -> animals.md
- ${var:starts:size}
** 변수 var에 있는 내용에서
   starts에는 문자열을 자르고 싶은 시작점
   size는 자르고 싶은 문자열의 끝점
   to starts from size의 범위를 변수 var에 저장하는 것
** starts를 음수로 설정하면 뒤에서 부터 세어서 starts를 찾고 size까지 정방향으로 출력함 (size가 없다면 끝까지 출력)
** starts이상 size미만
- ${var:10:4} $start:end

Q2. animals.txt -> animals.md 파일 이름 변경
  var=animals.txt
  mv $var ${var:0:7}.md
  --------------
  범위 확인 방법
  echo ${var:0:7}

## $(( 변수 )) 구조
- 수학 연산을 가능하게 하는 구조
- 숫자인 문자열이 들어왔을 떄, 숫자로 인식함 
- 가독성을 위해서 앞뒤로 띄어주는 게 좋음

Q3. 5를 변수에 담고, 5를 사용해서 15가 담긴 변수 만들기 
  five=5
  fifth=$(( five * 3 )) ## 중괄호는 substract할 때만 사용하기 

- $(( ten = ten + 1 ))
- 초깃값 0
** 변수 설정을 따로 하지 않은 ten은 초기값으로 0을 가지고 연산에 참여하게 됨
** 따라서 echo $(( ten = ten + 1 ))의 출력 결과는 1임

- 비교 연산
  $(( ten > 0 )) # 1 == True, 0 == False
  *** echo $(( ten > 0 )) 1 (True) or 0 (False) 출력 됨

Q4. 임의의 수 num이 2의 배수인지 확인하는 코드 작성하기
  num=11 ; echo $((num % 2 == 0))

## $( ) 표현
- 명령의 결과값을 변수에 담고 싶을 때
  result=$( cat /etc/passwd | cut -d: -f1 )
-----------------------------

# 스크립트 파일 작성하기
- 파일 확장자는 .sh or none #확장자가 없어도 스크립트로 인식됨
- 1) 파일을 실행가능한 상태로 바꾼다. 
  2) 실행하기
- shebang 달기

  vi ex1
  ./ex1 (not found) #파일을 실행가능한 상태로 바꾸기 위해서 설정해줘야함 
  chmod +x ex1
  ./ex1 (파일 실행)

**** echo로 출력, read로 입력 ****

# 인수
1. .sh 파일 만들기 (셸)
- ls $1 | wc -l 이 있디면 $1에 인수가 들어가서 해당 라인이 실행됨 
2. ./(파일이름).sh $인수 넣고 싶은 값 #실행문
(왜 *를 쓰면 값이 다르게 나올까?)

## 위치 인수 (positional argument)
- $n (-9)
- 외부에서 인수를 받아와서 사용할 때
-  ${10} : 10 이상일 때

## $#
- 총 인수 개수
- 큰 따옴표로 인수 감싸는 습관 들여야 함 

Q5. classfile 디렉토리를 인수로 받아서, 파일과 디렉토리 개수를 세는 스크립트 짜기 
 ```sh
 파일명 : counter (셸 스크립트)
 -----------------------
 <출력>
 현재 위치 : ...
 파일 ...개, 폴더 ....개 입니다.

 ----------------
 test case 1: .  --> ls .
 test case 2: *  --> ls *

 ---------------------------------------
 <count 파일 안>
 #!/bin/bash

 pwd
 ls -l "$1" | grep -v 'd' | wc -l
 ls -l "$2" | grep 'd' | wc -l

 ----------------------------------------
 <실행 shell>
 ./count.sh . .


 //교수님 저거 ./count*하면 프로그램 실행전에 셸에서 와일드카드 처리해서 그런거 아닐까요

## $*
- 모든 인수를 출력해주는 변수

Q6. 전화번호 부 관리 스크립트 만들기
1) 검색
  ./book.sh 이름

2) 추가
  이름, 번호를 인자로 넣어 추가하기

3) 삭제
  이름으로 검색해서 이름, 번호를 삭제하기

